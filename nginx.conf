user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;

  keepalive_timeout  65;

  server_tokens off;


  server {
    listen 80;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;

    etag on;
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_types application/atom+xml application/javascript
        application/json application/ld+json application/manifest+json
        application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject
        application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml
        application/xml font/opentype image/bmp image/svg+xml image/x-icon
        text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc
        text/vtt text/x-component text/x-cross-domain-policy;

    # Custom http code return page
    error_page 301 /_code_301;
    error_page 302 /_code_302;
    error_page 404 /_code_404;

    location = /_code_301 {
      internal;
      return 200 "Moved Permanently\n";
    }
    location = /_code_302 {
      internal;
      return 200 "Found\n";
    }
    location = /_code_404 {
      internal;
      return 200 "Not Found\n";
    }

    root /usr/share/nginx/html;
    index index.html index.htm;

    set $redirect_https true;
    set $redirect_https_condition "";
    if ($redirect_https = "true")
    {
      set $redirect_https_condition E;
    }

    location / {

      if ($http_X_Forwarded_Proto = "http") {
        set $redirect_https_condition "${redirect_https_condition}R";
      }

      if ($redirect_https_condition = ER) {
        return 302 https://$host$request_uri;
      }

      try_files $uri $uri/ /index.html;
    }

    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
    }

    # Media: images, icons, video, audio, HTC, fonts
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|woff|woff2|eot|ttf|json)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }

    # Javascript and CSS files
    location ~* \.(?:css|js)$ {
        try_files $uri =404;
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root /usr/share/nginx/html;
    }
  }
}
